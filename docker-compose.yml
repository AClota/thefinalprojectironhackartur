version: "3.8"

services:
  # Backend Service (Node.js)
  backend:
    build:
      context: ./expensy_backend

    environment:
      - DATABASE_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/?authSource=${MONGO_DB}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - ${BACKEND_PORT}:8706"   # Expose backend on port 8707 locally
    depends_on:
      - redis           # Ensure Redis is available before starting the backend
      - mongo           # Ensure MongoDB is available before starting the backend
    networks:
      - expensy

  # Frontend Service (Next.js)
  frontend:
    build:
       context: ./expensy_frontend

    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}  # API URL for frontend to communicate with backend
    ports:
      - "3002:3000"     # Expose frontend on port 3002
    depends_on:
      - backend         # Ensure the backend is up before starting the frontend
    networks:
      - expensy

  # Redis Service
  redis:
    image: redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"     # Expose Redis on port 6379
    networks:
      - expensy

  # MongoDB Service
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"   # Expose MongoDB on port 27017
    volumes:
      - type: volume
        source: mongo_data
        target: /data/db
    networks:
      - expensy

# Define volumes for data persistence
volumes:
  mongo_data:

# Define a custom network for the services
networks:
  expensy:
    driver: bridge

