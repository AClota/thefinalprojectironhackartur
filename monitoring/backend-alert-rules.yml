# This PrometheusRule for backend service includes Business alerts (e.g., too few expenses) & Technical alerts (e.g., failed API calls, MongoDB connection alert)
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: backend-alert-rules
  namespace: monitoring
  labels:
    release: kube-prometheus-stack # installed Helm release, required for Prometheus to pick this rule up
    role: alert-rules
spec:
  groups:
    - name: backend-business-rules
      rules:
        - alert: TooFewExpenses
          expr: expenses_total < 3
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "Too few expenses recorded"
            description: "Less than 3 expenses recorded in the last 5 minutes."

        - alert: HighFailedAPICalls
          expr: increase(http_requests_total{statusCode="500"}[5m]) > 3
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: "Spike in failed API calls"
            description:  "More than 3 failed API calls (500) in the last 5 minutes."

    - name: backend-health-checks
      rules:
        - alert: MongoDBConnectionLost
          expr: mongo_connection_status == 0
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: "MongoDB connection lost"
            description: "The backend reports MongoDB connection status as DOWN."

        - alert: HighEventLoopLag
          expr: nodejs_eventloop_lag_max_seconds > 0.5
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: "High Node.js event loop lag"
            description: "Max event loop lag is over 0.5s, which may affect performance."
    
    - name: resource-usage-checks
      rules:
        - alert: HighMemoryUsage
          expr: (process_resident_memory_bytes / process_virtual_memory_bytes) > 0.7
          for: 1m
          labels:
            severity: warning
          annotations:
            summary: "Memory usage exceeds 70%"
    
    - name: test-alert-group
      rules:
        - alert: AlwaysFiringTestAlert
          expr: vector(1) # always evaluates to true, causing the alert to fire
          for: 1m
          labels:
            severity: info
          annotations:
            summary: "This is a test alert"
            description: "This alert is firing to test email alerting"





