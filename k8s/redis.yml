apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-statefulset
  namespace: expensy
spec:
  serviceName: "redis-service"
  replicas: 2
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis-container
        image: redis:latest
        ports:
          - containerPort: 6379
        env:
          - name: REDIS_PASSWORD # environment variable name inside the container
            valueFrom:
              secretKeyRef:
                name: expensy-secrets
                key: redis-password # the key inside the Kubernetes Secret's data
        command: [ "sh", "-c" ]
        args: [ "redis-server --requirepass \"$REDIS_PASSWORD\"" ]
        volumeMounts:
        - name: redis-storage
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: redis-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: managed-csi
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    app: redis
  ports:
    - name: redis-port
      port: 6379
      targetPort: 6379
  clusterIP: None # headless service, enables persistent identifier for each pod across any rescheduling