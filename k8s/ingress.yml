apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: expensy-ingress
  namespace: expensy
  annotations:
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    # Basic cert-manager configuration
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    cert-manager.io/ingress.class: nginx  # ðŸ‘ˆ This tells cert-manager which controller to use
    
    # Security exceptions
    nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/satisfy: "any"  # Bypass other restrictions for ACME
    

spec:
  ingressClassName:  "nginx"
  # Cert-Manager creates a Certificate resource in the background automatically
  tls:
  - hosts:
    - najhack.online
    - api.najhack.online
    secretName: expensy-tls  # cert will be stored here 
  rules:
    - host: najhack.online
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 3000
    - host: api.najhack.online
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: backend-service  # Backend service for path /api
                port:
                  number: 8706  # Port exposed by the backend service